给定一个数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。

返回滑动窗口中的最大值。

 

示例:

输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3
输出: [3,3,5,5,6,7] 
解释: 

  滑动窗口的位置                最大值
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7
 
进阶：你能在线性时间复杂度内解决此题吗？

此题使用双端队列（deque）来解，队列的front为k个数值中最大的，每次k向右移动的时候，将新的值与队列中back的数值比较，如果num[k]>back，则踢出back（pop_back），重复执行直到back的值大于num[k]或者队列为空，然后将nums[k]从后面插入到队列中。每次k向右移动的时候，判断队列front的值的索引是否还在区间内，如果不在，则将其踢出队列（pop_front）。